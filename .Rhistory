install.packages("swirl")
library(swirl)
swirl()
bye()
swirl()
g
R.version.string()
R.version.string
library(swirl)
swirl()
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir<-"C:/Users/Administrator/Documents"
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R","mytest2.R")
?copy
?file.copy
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
?file.path
file.path('folder1','folder2')
file.path('folder1','folder2',recursive=TRUE)
info()
?dir.create
dir.create('folder1','folder2',recursive=TRUE)
dir.create(file.path('testdir2','testdir3',recursive=TRUE))
dir.create(file.path('testdir2','testdir3'),recursive=TRUE)
unlink("testdir2")
unlink("testdir2", recursive=TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char, collapse=" ")
my_name<-c(my_char,"Laura")
my_name
paste(my_name, collapse=" ")
paste("Hello","world!",sep=" ")
paste(c(1:3),c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
rm(list=ls())
library(swirl)
swirl()
x
library(swirl)
swirl()
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2) <- c("foo", "bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(vector,my_matrix)
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)<-cnames
my_data
rm(list=ls())
install.packages("KernSmooth")
library(KernSmooth)
make.power<-function(n){
pow<-function(x){
x^n
}
pow
}
cube<-make.power(3)
square<-make.power(2)
cube(3)
square(2)
rm(list=ls())
library(swirl)
swirl(9)
exit()
swirl()
1:20
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina", "Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!5==7
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
rm(list=ls())
x<-1:10
if(x>5)x<-0
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-4
f(3)
a<-numeric()
source('~/MATERIALE/FORMAZIONE_CORSI_ONLINE/COURSERA/DATA SCIENCE SPECIALIZATION/R PROGRAMMING/WEEK3/ProgrammingAssignment2/example.R', echo=TRUE)
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
?"<<-"
x<<-5
a<-function(x){}
a<-function(x){}
a<-function(x){
x<-6
y<-x+2
y}
a(6)
environment(a)
environment(y)
environment(x)
x
getwd()
setwd("~/MATERIALE/FORMAZIONE_CORSI_ONLINE/COURSERA/DATA SCIENCE SPECIALIZATION/R PROGRAMMING/WEEK3/ProgrammingAssignment2")
source('~/MATERIALE/FORMAZIONE_CORSI_ONLINE/COURSERA/DATA SCIENCE SPECIALIZATION/R PROGRAMMING/WEEK3/ProgrammingAssignment2/example.R', echo=TRUE)
a<-makeVector(1)
cachemean(a)
vector <- makeVector(c(1, 2, 3))
cachemean(vector)
vector$set(c(4, 5, 6))
cachemean(vector)
cachemean(vector)
cachemean(vector)
vector$set(c(4, 5, 7))
cachemean(vector)
cachemean(vector)
vector$get
vector$get()
vector$set(c(4, 5, 8))
vector&get()
vector$get()
vector$getmean()
cachemean(vector)
vector$getmean()
rm(a, vector)
rm(cachemean, makeVector)
?solve
x<-matrix(rnorm(4),2,2)
x
solve(x)
source('~/MATERIALE/FORMAZIONE_CORSI_ONLINE/COURSERA/DATA SCIENCE SPECIALIZATION/R PROGRAMMING/WEEK3/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
x
test<-solve(x)
makeCacheMatrix(x)
cacheSolve(x)
class(x)
rm(x)
rm(test)
x<-makeCacheMatrix(matrix(rnorm(4),2,2))
x
x$getM
x$getm()
x$getM()
x$getInv
x$getInv()
cacheSolve(x)
test<-x$getM
testInv<-solve(test)
test<-x$getM()
testInv<-solve(test)
identical(inv,testInv)
cacheSolve(x)
x<-makeCacheMatrix(matrix(rnorm(16),4,4))
cacheSolve(x)
cacheSolve(x)
